package com.penzov.objectdetectorapp

import android.content.Context
import android.speech.tts.TextToSpeech
import java.util.Locale

// –û–±–Ω–æ–≤–∏–ª Speaker: —Ç–µ–ø–µ—Ä—å –æ–∑–≤—É—á–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ —Ç—Ä–µ–∫–Ω—É—Ç—ã–º –æ–±—ä–µ–∫—Ç–∞–º (TrackedBox)
class Speaker(context: Context) {

    private lateinit var tts: TextToSpeech
    private var lastSpokenTime: Long = 0
    private val speakIntervalMs: Long = 3000L // ‚è± –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –æ–∑–≤—É—á–∫–∞–º–∏ (3 —Å–µ–∫)

    // –ö—ç—à –æ–∑–≤—É—á–µ–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤, —á—Ç–æ–±—ã –Ω–µ –ø–æ–≤—Ç–æ—Ä—è—Ç—å—Å—è
    private val spokenTrackIds = mutableSetOf<Int>()

    init {
        var tempTts: TextToSpeech? = null

        tempTts = TextToSpeech(context.applicationContext) { status ->
            if (status == TextToSpeech.SUCCESS) {
                tempTts?.language = Locale("ru")
            }
        }

        tts = tempTts
    }

    // üé§ –ü–æ–ª—É—á–∞—é —Å–ø–∏—Å–æ–∫ —Ç—Ä–µ–∫–Ω—É—Ç—ã—Ö –±–æ–∫—Å–æ–≤ –∏ –æ–∑–≤—É—á–∏–≤–∞—é —Ç–æ–ª—å–∫–æ –ù–û–í–´–ï
    fun speakNewObjects(boxes: List<TrackedBox>) {
        if (boxes.isEmpty()) return

        val newBoxes = boxes.filter { it.trackId !in spokenTrackIds }
        if (newBoxes.isEmpty()) return

        val grouped = newBoxes.groupingBy { it.label }.eachCount()
        val sentence = grouped.entries.joinToString(", ") { (label, count) ->
            if (count == 1) label else "${numberToText(count)} $label"
        }

        val currentTime = System.currentTimeMillis()
        if (currentTime - lastSpokenTime >= speakIntervalMs) {
            tts.speak(sentence, TextToSpeech.QUEUE_FLUSH, null, "tts_id")
            lastSpokenTime = currentTime
            // –î–æ–±–∞–≤–ª—è—é –Ω–æ–≤—ã–µ —Ç—Ä–µ–∫-ID –≤ –∫—ç—à
            spokenTrackIds.addAll(newBoxes.map { it.trackId })
        }
    }

    fun shutdown() {
        if (::tts.isInitialized) {
            tts.stop()
            tts.shutdown()
        }
    }

    private fun numberToText(n: Int): String {
        return when (n) {
            1 -> "–æ–¥–∏–Ω"
            2 -> "–¥–≤–∞"
            3 -> "—Ç—Ä–∏"
            4 -> "—á–µ—Ç—ã—Ä–µ"
            5 -> "–ø—è—Ç—å"
            6 -> "—à–µ—Å—Ç—å"
            7 -> "—Å–µ–º—å"
            8 -> "–≤–æ—Å–µ–º—å"
            9 -> "–¥–µ–≤—è—Ç—å"
            10 -> "–¥–µ—Å—è—Ç—å"
            else -> n.toString()
        }
    }
}



