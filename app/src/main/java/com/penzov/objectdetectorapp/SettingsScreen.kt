package com.penzov.objectdetectorapp

import androidx.compose.foundation.layout.*
import androidx.compose.foundation.lazy.LazyColumn
import androidx.compose.foundation.lazy.items
import androidx.compose.material.icons.Icons
import androidx.compose.material.icons.filled.Settings
import androidx.compose.material3.*
import androidx.compose.runtime.*
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.text.input.TextFieldValue
import androidx.compose.ui.unit.dp

@Composable
fun SettingsScreen(
    notifier: TelegramNotifier,
    confidence: Float,
    onConfidenceChanged: (Float) -> Unit,
    onBack: () -> Unit
) {
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –Ω–æ–≤–æ–≥–æ Telegram ID
    var newRecipient by remember { mutableStateOf(TextFieldValue("")) }
    val recipients = remember { mutableStateListOf<String>().apply { addAll(notifier.getRecipients()) } }

    Column(modifier = Modifier.fillMaxSize().padding(16.dp)) {

        Text("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è", style = MaterialTheme.typography.headlineSmall)
        Spacer(modifier = Modifier.height(16.dp))

        // üß† –ö–∞—Ä—Ç–æ—á–∫–∞ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –º–æ–¥–µ–ª–∏ (–ø–æ—Ä–æ–≥ –¥–æ–≤–µ—Ä–∏—è)
        Card(modifier = Modifier.fillMaxWidth(), elevation = CardDefaults.cardElevation()) {
            Column(modifier = Modifier.padding(16.dp)) {
                Row(verticalAlignment = Alignment.CenterVertically) {
                    Icon(Icons.Default.Settings, contentDescription = null)
                    Spacer(modifier = Modifier.width(8.dp))
                    Text("–ß—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–µ—Ç–µ–∫—Ü–∏–∏", style = MaterialTheme.typography.titleMedium)
                }
                Spacer(modifier = Modifier.height(8.dp))
                Slider(
                    value = confidence,
                    onValueChange = { onConfidenceChanged(it) },
                    valueRange = 0.1f..1f,
                    steps = 8
                )
                Text("–¢–µ–∫—É—â–∏–π –ø–æ—Ä–æ–≥: ${(confidence * 100).toInt()}%")
            }
        }

        Spacer(modifier = Modifier.height(24.dp))

        // üí¨ –ö–∞—Ä—Ç–æ—á–∫–∞ Telegram –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π
        Card(modifier = Modifier.fillMaxWidth(), elevation = CardDefaults.cardElevation()) {
            Column(modifier = Modifier.padding(16.dp)) {
                Text("–ü–æ–ª—É—á–∞—Ç–µ–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ Telegram", style = MaterialTheme.typography.titleMedium)
                Spacer(modifier = Modifier.height(8.dp))

                Row(modifier = Modifier.fillMaxWidth()) {
                    TextField(
                        value = newRecipient,
                        onValueChange = { newRecipient = it },
                        modifier = Modifier.weight(1f),
                        label = { Text("–í–≤–µ–¥–∏—Ç–µ Telegram ID") }
                    )
                    Spacer(modifier = Modifier.width(8.dp))
                    Button(onClick = {
                        val id = newRecipient.text.trim()
                        if (id.isNotEmpty() && id !in recipients) {
                            recipients.add(id)
                            notifier.addRecipient(id)
                            newRecipient = TextFieldValue("")
                        }
                    }) {
                        Text("–î–æ–±–∞–≤–∏—Ç—å")
                    }
                }

                LazyColumn(modifier = Modifier.fillMaxHeight().padding(top = 8.dp)) {
                    items(recipients) { id ->
                        Row(modifier = Modifier.fillMaxWidth().padding(vertical = 2.dp)) {
                            Text("ID: $id", modifier = Modifier.weight(1f))
                            Button(onClick = {
                                recipients.remove(id)
                                notifier.removeRecipient(id)
                            }) {
                                Text("–£–¥–∞–ª–∏—Ç—å")
                            }
                        }
                    }
                }
            }
        }

        Spacer(modifier = Modifier.height(16.dp))

        Button(onClick = onBack, modifier = Modifier.fillMaxWidth()) {
            Text("‚Üê –ù–∞–∑–∞–¥")
        }
    }
}
